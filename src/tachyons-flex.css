@custom-media --breakpoint-not-small screen and (min-width: 48em);
@custom-media --breakpoint-medium screen and (min-width: 48em) and (max-width: 64em);
@custom-media --breakpoint-large screen and (min-width: 64em);

/*

   ## FLEX BOX LAYOUT

   Mix & match container-level flex properties with item-level ones to achieve
   desired flex box layouts.

   More complex flex layout system may need more fine-tuned values for different
   flex properties, but in most cases, simple layouts can easily be achieved by
   a combination of the classes enlisted here.

   For further reference:
   https://developer.mozilla.org/en-US/docs/Web/CSS/flex

   ### To note:
   The `df` class defines a flex container, from where all flex layouts start.
   This class was defined following the syntax found on the __Display__ module:
   https://github.com/tachyons-css/tachyons-display

   Base:
    flx = Base for all flex-related properties

   Modifiers:
    dr = sets flex direction to row (default value)
    dc = sets flex direction to column
    drr = sets flex direction to reversed row
    dcr = sets flex direction to reversed column

    i = sets a flex item, standing for `flex: 1`; property value, which is a
    shorthand for `flex-grow: 1;`, `flex-shrink: 1;` and `flex-basis: 0%;`.
    This is the most likely usage for a flex item: to grow so as to take all
    white space available.

    g0 = sets flex grow to 0
    s0 = sets flex shrink to 0
    b0 = sets flex basis to 0%
    g1 = sets flex grow to 1
    s1 = sets flex shrink to 1
    b1 = sets flex basis to 100%

    ais = align items to stretch (default)
    aifs = align items to start (flex-start)
    aife = align items to end (flex-end)
    aic = align items to center
    aib = align items to baseline

    acs = align content to stretch (default)
    acfs = align content to start (flex-start)
    acfe = align content to end (flex-end)
    acc = align content to center
    acsb = align content with space between
    acsa = align content with space around

    ass = align self to stretch (default)
    asfs = align self to start (flex-start)
    asfe = align self to end (flex-end)
    asc = align self to center
    asb = align self to baseline

    jcfs = justify content to start (flex-start, default)
    jcfe = justify content to end (flex-end)
    jcc = justify content to center
    jcsb = justify content to space between
    jcsa = justify content to space around

    w = flex wrap
    wr = flex wrap reverse
    wn = flex no wrap (default)

    o0 = order 0
    o1 = order 1
    o2 = order 2
    o3 = order 3
    o4 = order 4
    o5 = order 5

   Media Query Extensions:
    -ns = not-small
    -m  = medium
    -l  = large

*/

/*
  FLEX CONTAINER
 */
.df {
  display: flex;
}

/*
  FLEX DIRECTION
 */
.flx-dc {
  flex-direction: column;
}
.flx-dr {
  flex-direction: row;
}
.flx-dcr {
  flex-direction: column-reverse;
}
.flx-drr {
  flex-direction: row-reverse;
}

@media (--breakpoint-not-small) {
  .flx-dc-ns {
    flex-direction: column;
  }
  .flx-dr-ns {
    flex-direction: row;
  }
  .flx-dcr-ns {
    flex-direction: column-reverse;
  }
  .flx-drr-ns {
    flex-direction: row-reverse;
  }
}
@media (--breakpoint-medium) {
  .flx-dc-m  {
    flex-direction: column;
  }
  .flx-dr-m  {
    flex-direction: row;
  }
  .flx-dcr-m {
    flex-direction: column-reverse;
  }
  .flx-drr-m {
    flex-direction: row-reverse;
  }
}
@media (--breakpoint-large) {
  .flx-dc-l {
    flex-direction: column;
  }
  .flx-dr-l {
    flex-direction: row;
  }
  .flx-dcr-l {
    flex-direction: column-reverse;
  }
  .flx-drr-l {
    flex-direction: row-reverse;
  }
}

/*
  FLEX
 */
.flx-i {
  flex: 1;
}
.flx-g0 {
  flex-grow: 0;
}
.flx-s0 {
  flex-shrink: 0;
}
.flx-b0 {
  flex-basis: 0%;
}
.flx-g1 {
  flex-grow: 1;
}
.flx-s1 {
  flex-shrink: 1;
}
.flx-b1 {
  flex-basis: 100%;
}
@media (--breakpoint-not-small) {
  .flx-i-ns {
    flex: 1;
  }
}
@media (--breakpoint-medium) {
  .flx-i-m {
    flex: 1;
  }
}
@media (--breakpoint-large) {
  .flx-i-l {
    flex: 1;
  }
}

/*
  ALIGN ITEMS
 */
.flx-ais {
  align-items: stretch;
}
.flx-aifs {
  align-items: flex-start;
}
.flx-aife {
  align-items: flex-end;
}
.flx-aic {
  align-items: center;
}
.flx-aib {
  align-items: baseline;
}
@media (--breakpoint-not-small) {
  .flx-ais-ns {
    align-items: stretch;
  }
  .flx-aifs-ns {
    align-items: flex-start;
  }
  .flx-aife-ns {
    align-items: flex-end;
  }
  .flx-aic-ns {
    align-items: center;
  }
  .flx-aib-ns {
    align-items: baseline;
  }
}
@media (--breakpoint-medium) {
  .flx-ais-m {
    align-items: stretch;
  }
  .flx-aifs-m {
    align-items: flex-start;
  }
  .flx-aife-m {
    align-items: flex-end;
  }
  .flx-aic-m {
    align-items: center;
  }
  .flx-aib-m {
    align-items: baseline;
  }
}
@media (--breakpoint-large) {
  .flx-ais-l {
    align-items: stretch;
  }
  .flx-aifs-l {
    align-items: flex-start;
  }
  .flx-aife-l {
    align-items: flex-end;
  }
  .flx-aic-l {
    align-items: center;
  }
  .flx-aib-l {
    align-items: baseline;
  }
}

/*
  ALIGN CONTENT
 */
.flx-acs {
  align-content: stretch;
}
.flx-acfs {
  align-content: flex-start;
}
.flx-acfe {
  align-content: flex-end;
}
.flx-acc {
  align-content: center;
}
.flx-acsb {
  align-content: space-between;
}
.flx-acsa {
  align-content: space-around;
}
@media (--breakpoint-not-small) {
  .flx-acs-ns {
    align-content: stretch;
  }
  .flx-acfs-ns {
    align-content: flex-start;
  }
  .flx-acfe-ns {
    align-content: flex-end;
  }
  .flx-acc-ns {
    align-content: center;
  }
  .flx-acsb-ns {
    align-content: space-between;
  }
  .flx-acsa-ns {
    align-content: space-around;
  }
}
@media (--breakpoint-medium) {
  .flx-acs-m {
    align-content: stretch;
  }
  .flx-acfs-m {
    align-content: flex-start;
  }
  .flx-acfe-m {
    align-content: flex-end;
  }
  .flx-acc-m {
    align-content: center;
  }
  .flx-acsb-m {
    align-content: space-between;
  }
  .flx-acsa-m {
    align-content: space-around;
  }
}
@media (--breakpoint-large) {
  .flx-acs-l {
    align-content: stretch;
  }
  .flx-acfs-l {
    align-content: flex-start;
  }
  .flx-acfe-l {
    align-content: flex-end;
  }
  .flx-acc-l {
    align-content: center;
  }
  .flx-acsb-l {
    align-content: space-between;
  }
  .flx-acsa-l {
    align-content: space-around;
  }
}

/*
  ALIGN SELF
 */
.flx-ass {
  align-self: stretch;
}
.flx-asfs {
  align-self: flex-start;
}
.flx-asfe {
  align-self: flex-end;
}
.flx-asc {
  align-self: center;
}
.flx-asb {
  align-self: baseline;
}
@media (--breakpoint-not-small) {
  .flx-ass-ns {
    align-self: stretch;
  }
  .flx-asfs-ns {
    align-self: flex-start;
  }
  .flx-asfe-ns {
    align-self: flex-end;
  }
  .flx-asc-ns {
    align-self: center;
  }
  .flx-asb-ns {
    align-self: baseline;
  }
}
@media (--breakpoint-medium) {
  .flx-ass-m {
    align-self: stretch;
  }
  .flx-asfs-m {
    align-self: flex-start;
  }
  .flx-asfe-m {
    align-self: flex-end;
  }
  .flx-asc-m {
    align-self: center;
  }
  .flx-asb-m {
    align-self: baseline;
  }
}
@media (--breakpoint-large) {
  .flx-ass-l {
    align-self: stretch;
  }
  .flx-asfs-l {
    align-self: flex-start;
  }
  .flx-asfe-l {
    align-self: flex-end;
  }
  .flx-asc-l {
    align-self: center;
  }
  .flx-asb-l {
    align-self: baseline;
  }
}

/*
  JUSTIFY CONTENT
 */
.flx-jcfs {
  justify-content: flex-start;
}
.flx-jcfe {
  justify-content: flex-end;
}
.flx-jcc {
  justify-content: center;
}
.flx-jcsb {
  justify-content: space-between;
}
.flx-jcsa {
  justify-content: space-around;
}
@media (--breakpoint-not-small) {
  .flx-jcfs-ns {
    justify-content: flex-start;
  }
  .flx-jcfe-ns {
    justify-content: flex-end;
  }
  .flx-jcc-ns {
    justify-content: center;
  }
  .flx-jcsb-ns {
    justify-content: space-between;
  }
  .flx-jcsa-ns {
    justify-content: space-around;
  }
}
@media (--breakpoint-medium) {
  .flx-jcfs-m {
    justify-content: flex-start;
  }
  .flx-jcfe-m {
    justify-content: flex-end;
  }
  .flx-jcc-m {
    justify-content: center;
  }
  .flx-jcsb-m {
    justify-content: space-between;
  }
  .flx-jcsa-m {
    justify-content: space-around;
  }
}
@media (--breakpoint-large) {
  .flx-jcfs-l {
    justify-content: flex-start;
  }
  .flx-jcfe-l {
    justify-content: flex-end;
  }
  .flx-jcc-l {
    justify-content: center;
  }
  .flx-jcsb-l {
    justify-content: space-between;
  }
  .flx-jcsa-l {
    justify-content: space-around;
  }
}

/*
  WRAP
 */
.flx-w {
  flex-wrap: wrap;
}
.flx-wr {
  flex-wrap: wrap-reverse;
}
.flx-wn {
  flex-wrap: nowrap;
}
@media (--breakpoint-not-small) {
  .flx-w-ns {
    flex-wrap: wrap;
  }
  .flx-wr-ns {
    flex-wrap: wrap-reverse;
  }
  .flx-wn-ns {
    flex-wrap: nowrap;
  }
}
@media (--breakpoint-medium) {
  .flx-w-m {
    flex-wrap: wrap;
  }
  .flx-wr-m {
    flex-wrap: wrap-reverse;
  }
  .flx-wn-m {
    flex-wrap: nowrap;
  }
}
@media (--breakpoint-large) {
  .flx-w-l {
    flex-wrap: wrap;
  }
  .flx-wr-l {
    flex-wrap: wrap-reverse;
  }
  .flx-wn-l {
    flex-wrap: nowrap;
  }
}

/*
  ORDER
 */
.flx-o0 {
  order: 0;
}
.flx-o1 {
  order: 1;
}
.flx-o2 {
  order: 2;
}
.flx-o3 {
  order: 3;
}
.flx-o4 {
  order: 4;
}
.flx-o5 {
  order: 5;
}
@media (--breakpoint-not-small) {
  .flx-o0-ns {
    order: 0;
  }
  .flx-o1-ns {
    order: 1;
  }
  .flx-o2-ns {
    order: 2;
  }
  .flx-o3-ns {
    order: 3;
  }
  .flx-o4-ns {
    order: 4;
  }
  .flx-o5-ns {
    order: 5;
  }
}
@media (--breakpoint-medium) {
  .flx-o0-m {
    order: 0;
  }
  .flx-o1-m {
    order: 1;
  }
  .flx-o2-m {
    order: 2;
  }
  .flx-o3-m {
    order: 3;
  }
  .flx-o4-m {
    order: 4;
  }
  .flx-o5-m {
    order: 5;
  }
}
@media (--breakpoint-large) {
  .flx-o0-l {
    order: 0;
  }
  .flx-o1-l {
    order: 1;
  }
  .flx-o2-l {
    order: 2;
  }
  .flx-o3-l {
    order: 3;
  }
  .flx-o4-l {
    order: 4;
  }
  .flx-o5-l {
    order: 5;
  }
}
